{"remainingRequest":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\babel-loader\\lib\\index.js!D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\vue-simplemde\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\vue-simplemde\\src\\index.vue","mtime":499162500000},{"path":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582103017138},{"path":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\babel-loader\\lib\\index.js","mtime":1582103090028},{"path":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582103017138},{"path":"D:\\MyProjects\\HbuilderX-projects\\2.19z\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SimpleMDE from 'simplemde';\nimport marked from 'marked';\nexport default {\n  name: 'vue-simplemde',\n  props: {\n    value: String,\n    name: String,\n    previewClass: String,\n    autoinit: {\n      type: Boolean,\n      default: function _default() {\n        return true;\n      }\n    },\n    highlight: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    },\n    sanitize: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    },\n    configs: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    previewRender: {\n      type: Function\n    }\n  },\n  data: function data() {\n    return {\n      modelVal: ''\n    };\n  },\n  mounted: function mounted() {\n    if (this.autoinit) this.initialize();\n  },\n  deactivated: function deactivated() {\n    var editor = this.simplemde;\n    if (!editor) return;\n    var isFullScreen = editor.codemirror.getOption('fullScreen');\n    if (isFullScreen) editor.toggleFullScreen();\n  },\n  methods: {\n    initialize: function initialize() {\n      var configs = Object.assign({\n        element: this.$el.firstElementChild,\n        initialValue: this.value,\n        previewRender: this.previewRender,\n        renderingConfig: {}\n      }, this.configs); // 同步 value 和 initialValue 的值\n\n      if (configs.initialValue) {\n        this.$emit('input', configs.initialValue);\n      } // 判断是否开启代码高亮\n\n\n      if (this.highlight) {\n        configs.renderingConfig.codeSyntaxHighlighting = true;\n      } // 设置是否渲染输入的html\n\n\n      marked.setOptions({\n        sanitize: this.sanitize\n      }); // 实例化编辑器\n\n      this.simplemde = new SimpleMDE(configs); // 添加自定义 previewClass\n\n      var className = this.previewClass || '';\n      this.addPreviewClass(className); // 绑定事件\n\n      this.bindingEvents();\n    },\n    bindingEvents: function bindingEvents() {\n      var _this = this;\n\n      this.simplemde.codemirror.on('change', function () {\n        var val = _this.simplemde.value();\n\n        _this.handleInput(val);\n      });\n    },\n    addPreviewClass: function addPreviewClass(className) {\n      var wrapper = this.simplemde.codemirror.getWrapperElement();\n      var preview = document.createElement('div');\n      wrapper.nextSibling.className += \" \".concat(className);\n      preview.className = \"editor-preview \".concat(className);\n      wrapper.appendChild(preview);\n    },\n    handleInput: function handleInput(val) {\n      this.isValueUpdateFromInner = true;\n      this.$emit('input', val);\n    }\n  },\n  destroyed: function destroyed() {\n    this.simplemde = null;\n  },\n  watch: {\n    value: function value(val) {\n      if (this.isValueUpdateFromInner) {\n        this.isValueUpdateFromInner = false;\n        return;\n      }\n\n      this.simplemde.value(val);\n      this.modelVal = val;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vue-simplemde\">\n    <textarea\n      class=\"vue-simplemde-textarea\"\n      :name=\"name\"\n      :value=\"modelVal\"\n      @input=\"handleInput($event.target.value)\"\n    />\n  </div>\n</template>\n\n<script>\nimport SimpleMDE from 'simplemde';\nimport marked from 'marked';\n\nexport default {\n  name: 'vue-simplemde',\n  props: {\n    value: String,\n    name: String,\n    previewClass: String,\n    autoinit: {\n      type: Boolean,\n      default() {\n        return true;\n      },\n    },\n    highlight: {\n      type: Boolean,\n      default() {\n        return false;\n      },\n    },\n    sanitize: {\n      type: Boolean,\n      default() {\n        return false;\n      },\n    },\n    configs: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    previewRender: {\n      type: Function,\n    },\n  },\n  data() {\n    return {\n      modelVal: '',\n    };\n  },\n  mounted() {\n    if (this.autoinit) this.initialize();\n  },\n  deactivated() {\n    const editor = this.simplemde;\n    if (!editor) return;\n    const isFullScreen = editor.codemirror.getOption('fullScreen');\n    if (isFullScreen) editor.toggleFullScreen();\n  },\n  methods: {\n    initialize() {\n      const configs = Object.assign({\n        element: this.$el.firstElementChild,\n        initialValue: this.value,\n        previewRender: this.previewRender,\n        renderingConfig: {},\n      }, this.configs);\n\n      // 同步 value 和 initialValue 的值\n      if (configs.initialValue) {\n        this.$emit('input', configs.initialValue);\n      }\n\n      // 判断是否开启代码高亮\n      if (this.highlight) {\n        configs.renderingConfig.codeSyntaxHighlighting = true;\n      }\n\n      // 设置是否渲染输入的html\n      marked.setOptions({ sanitize: this.sanitize });\n\n      // 实例化编辑器\n      this.simplemde = new SimpleMDE(configs);\n\n      // 添加自定义 previewClass\n      const className = this.previewClass || '';\n      this.addPreviewClass(className);\n\n      // 绑定事件\n      this.bindingEvents();\n    },\n    bindingEvents() {\n      this.simplemde.codemirror.on('change', () => {\n        const val = this.simplemde.value();\n        this.handleInput(val);\n      });\n    },\n    addPreviewClass(className) {\n      const wrapper = this.simplemde.codemirror.getWrapperElement();\n      const preview = document.createElement('div');\n      wrapper.nextSibling.className += ` ${className}`;\n      preview.className = `editor-preview ${className}`;\n      wrapper.appendChild(preview);\n    },\n    handleInput(val) {\n      this.isValueUpdateFromInner = true;\n      this.$emit('input', val);\n    },\n  },\n  destroyed() {\n    this.simplemde = null;\n  },\n  watch: {\n    value(val) {\n      if (this.isValueUpdateFromInner) {\n        this.isValueUpdateFromInner = false;\n        return;\n      }\n      this.simplemde.value(val);\n      this.modelVal = val;\n    },\n  },\n};\n</script>\n\n<style>\n.vue-simplemde .markdown-body {\n  padding: 0.5em\n}\n\n.vue-simplemde .editor-preview-active, .vue-simplemde .editor-preview-active-side {\n  display: block;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-simplemde/src"}]}